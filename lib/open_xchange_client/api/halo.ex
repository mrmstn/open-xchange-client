# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule OpenXchangeClient.Api.Halo do
  @moduledoc """
  API calls for all endpoints tagged `Halo`.
  """

  alias OpenXchangeClient.Connection
  import OpenXchangeClient.RequestBuilder

  @doc """
  Gets a contact picture.
  <b>Important:</b> This endpoint is deprecated and will be removed in the future. Use the new /contacts/picture endpoint instead.  At least one of the optional search parameters should be set. All parameters are connected by OR during the search. More specific parameters like `user_id` or `id` are prioritized in case of multiple matches. 

  ## Parameters

  - connection (OpenXchangeClient.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :session (String.t): Falls back to the public session cookie.
    - :internal_userid (integer()): The internal user ID of a user whose picture you want to load.
    - :userid (integer()): An alias for `internal_userid`.
    - :user_id (integer()): An alias for `internal_userid`.
    - :id (String.t): A contact ID.
    - :email (String.t): An email to searchz for. Will pick global address book matches before regular matches. After that picks the most recently changed contact.
    - :email1 (String.t): An alias for `email`.
    - :email2 (String.t): An alias for `email`.
    - :email3 (String.t): An alias for `email`.
    - :transformation_needed (boolean()): Indicate if the image needs to be transformed.
    - :crop_width (integer()): The width a cropped image should have. Needs to be a bigger value than the images width.
    - :crop_height (integer()): The height a cropped image should have. Needs to be a bigger value than the images hight.
    - :rotate (boolean()): Indicate if the image should get rotated
    - :compress (boolean()): Indicate if the image should be compressed. Output format depends on scaleType.
    - :width (integer()): The maximum width of the target image. Can not be greater than the value set in 'com.openexchange.tools.images.maxWidth'. Default is 4096.
    - :height (integer()): The maximum height of the target image. Can not be greater than the value set in 'com.openexchange.tools.images.maxHeight'. Default is 4096.
    - :shrink_only (boolean()): Set to 'true' to only scale images 'greater than' target size
    - :scale_type (String.t): The scale type to use.
  ## Returns

  {:ok, String.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec get_halo_contact_picture(Tesla.Env.client(), keyword()) ::
          {:ok, nil} | {:ok, String.t()} | {:error, Tesla.Env.t()}
  def get_halo_contact_picture(connection, opts \\ []) do
    optional_params = %{
      :session => :query,
      :internal_userid => :query,
      :userid => :query,
      :user_id => :query,
      :id => :query,
      :email => :query,
      :email1 => :query,
      :email2 => :query,
      :email3 => :query,
      :transformationNeeded => :query,
      :cropWidth => :query,
      :cropHeight => :query,
      :rotate => :query,
      :compress => :query,
      :width => :query,
      :height => :query,
      :shrinkOnly => :query,
      :scaleType => :query
    }

    %{}
    |> method(:get)
    |> url("/halo/contact/picture")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, false},
      {404, false}
    ])
  end

  @doc """
  Gets all halo services.

  ## Parameters

  - connection (OpenXchangeClient.Connection): Connection to server
  - session (String.t): A session ID previously obtained from the login module.
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, OpenXchangeClient.Model.HaloServicesResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec get_halo_services(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, OpenXchangeClient.Model.HaloServicesResponse.t()} | {:error, Tesla.Env.t()}
  def get_halo_services(connection, session, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/halo/contact?action&#x3D;services")
    |> add_param(:query, :session, session)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, %OpenXchangeClient.Model.HaloServicesResponse{}}
    ])
  end

  @doc """
  Investigates a contact.

  ## Parameters

  - connection (OpenXchangeClient.Connection): Connection to server
  - session (String.t): A session ID previously obtained from the login module.
  - provider (String.t): The halo provider, like \"com.openexchange.halo.contacts\". See [/halo/contact?action=services](#operation--halo-contact-action-services-get) for available providers.
  - columns (String.t): A comma-separated list of columns to return. See [Column identifiers](#column-identifiers) for a mapping of numeric identifiers to fields.
  - opts (KeywordList): [optional] Optional parameters
    - :email1 (String.t): The first eMail address of the contact
    - :email2 (String.t): The second eMail address of the contact
    - :email3 (String.t): The third eMail address of the contact
    - :internal_userid (integer()): The internal id of the user
    - :timezone (String.t): The timezone.
    - :start (integer()): The start point. Only mandatory for provider \"com.openexchange.halo.appointments\".
    - :end (integer()): The end point. Only mandatory for provider \"com.openexchange.halo.appointments\".
    - :sort (String.t): The identifier of a column which determines the sort order of the response. If this parameter is specified, then the parameter order must be also specified. Optional for provider \"com.openexchange.halo.appointments\".
    - :order (String.t): \"asc\" if the response entires should be sorted in the ascending order, \"desc\" if the response entries should be sorted in the descending order. If this parameter is specified, then the parameter sort must be also specified. Optional for provider \"com.openexchange.halo.appointments\".
    - :limit (integer()): The maximum number of mails within the result. Optional for provider \"com.openexchange.halo.mail\".
  ## Returns

  {:ok, OpenXchangeClient.Model.HaloInvestigationResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec investigate_contact_halo(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, OpenXchangeClient.Model.HaloInvestigationResponse.t()} | {:error, Tesla.Env.t()}
  def investigate_contact_halo(connection, session, provider, columns, opts \\ []) do
    optional_params = %{
      :email1 => :query,
      :email2 => :query,
      :email3 => :query,
      :internal_userid => :query,
      :timezone => :query,
      :start => :query,
      :end => :query,
      :sort => :query,
      :order => :query,
      :limit => :query
    }

    %{}
    |> method(:get)
    |> url("/halo/contact?action&#x3D;investigate")
    |> add_param(:query, :session, session)
    |> add_param(:query, :provider, provider)
    |> add_param(:query, :columns, columns)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, %OpenXchangeClient.Model.HaloInvestigationResponse{}}
    ])
  end

  @doc """
  Investigates a contact.

  ## Parameters

  - connection (OpenXchangeClient.Connection): Connection to server
  - session (String.t): A session ID previously obtained from the login module.
  - provider (String.t): The halo provider, like \"com.openexchange.halo.contacts\". See [/halo/contact?action=services](#operation--halo-contact-action-services-get) for available providers.
  - columns (String.t): A comma-separated list of columns to return. See [Column identifiers](#column-identifiers) for a mapping of numeric identifiers to fields.
  - opts (KeywordList): [optional] Optional parameters
    - :timezone (String.t): The timezone.
    - :start (integer()): The start point. Only mandatory for provider \"com.openexchange.halo.appointments\".
    - :end (integer()): The end point. Only mandatory for provider \"com.openexchange.halo.appointments\".
    - :sort (String.t): The identifier of a column which determines the sort order of the response. If this parameter is specified, then the parameter order must be also specified. Optional for provider \"com.openexchange.halo.appointments\".
    - :order (String.t): \"asc\" if the response entires should be sorted in the ascending order, \"desc\" if the response entries should be sorted in the descending order. If this parameter is specified, then the parameter sort must be also specified. Optional for provider \"com.openexchange.halo.appointments\".
    - :limit (integer()): The maximum number of mails within the result. Optional for provider \"com.openexchange.halo.mail\".
    - :contact_id (integer()): The id of the contact
    - :internal_userid (integer()): The internal user id
    - :uid (String.t): Can only be written when the object is created. Internal and external globally unique identifier of the contact. Is used to recognize contacts within vCard files. If this attribute is not written it contains an automatic generated UUID.
    - :display_name (String.t): The display name.
    - :first_name (String.t): The given name.
    - :last_name (String.t): The sur name.
    - :second_name (String.t): The middle name.
    - :suffix (String.t): The suffix.
    - :title (String.t): The title.
    - :street_home (String.t): The street of the home address.
    - :postal_code_home (String.t): The postal code of the home address.
    - :city_home (String.t): The city of the home address.
    - :state_home (String.t): The state of the home address.
    - :country_home (String.t): The country of the home address.
    - :birthday (integer()): The date of birth.
    - :marital_status (String.t): The marital status.
    - :number_of_children (String.t): The number of children.
    - :profession (String.t): The profession.
    - :nickname (String.t): The nickname.
    - :spouse_name (String.t): The name of the spouse.
    - :anniversary (integer()): The anniversary.
    - :note (String.t): A note.
    - :department (String.t): The department.
    - :position (String.t): The position.
    - :employee_type (String.t): The type of the employee.
    - :room_number (String.t): The room number.
    - :street_business (String.t): The street of the business address.
    - :postal_code_business (String.t): The postal code of the business address.
    - :city_business (String.t): The city of the business address.
    - :state_business (String.t): The state of the business address.
    - :country_business (String.t): The country of the business address.
    - :user_id (integer()): The internal user id.
    - :number_of_employees (String.t): The number of employees.
    - :sales_volume (String.t): The sales volume.
    - :tax_id (String.t): The tax id.
    - :commercial_register (String.t): The commercial register.
    - :branches (String.t): The branches.
    - :business_category (String.t): The business category.
    - :info (String.t): An information.
    - :manager_name (String.t): The manager's name.
    - :assistant_name (String.t): The assistant's name.
    - :street_other (String.t): The street of another address.
    - :postal_code_other (String.t): The postal code of another address.
    - :city_other (String.t): The city of another address.
    - :state_other (String.t): The state of another address.
    - :country_other (String.t): The country of another address.
    - :telephone_business1 (String.t): The business telephone number 1.
    - :telephone_business2 (String.t): The business telephone number 2.
    - :fax_business (String.t): The business fax number.
    - :telephone_callback (String.t): The callback telephone number.
    - :telephone_car (String.t): The car telephone number.
    - :telephone_company (String.t): The company telephone number.
    - :telephone_home1 (String.t): The home telephone number 1.
    - :telephone_home2 (String.t): The home telephone number 2.
    - :fax_home (String.t): The home fax number.
    - :cellular_telephone1 (String.t): The cellular telephone number 1.
    - :cellular_telephone2 (String.t): The cellular telephone number 2.
    - :telephone_other (String.t): The other telephone number.
    - :fax_other (String.t): The other fax number.
    - :email1 (String.t): The email address 1.
    - :email2 (String.t): The email address 2.
    - :email3 (String.t): The email address 3.
    - :url (String.t): The url address or homepage.
    - :telephone_isdn (String.t): The ISDN telephone number.
    - :telephone_pager (String.t): The pager telephone number.
    - :telephone_primary (String.t): The primary telephone number.
    - :telephone_radio (String.t): The radio telephone number.
    - :telephone_telex (String.t): The telex telephone number.
    - :telephone_ttytdd (String.t): The TTY/TDD telephone number.
    - :instant_messenger1 (String.t): The instant messenger address 1.
    - :instant_messenger2 (String.t): The instant messenger address 2.
    - :telephone_ip (String.t): The IP telephone number.
    - :telephone_assistant (String.t): The assistant telephone number.
    - :company (String.t): The company name.
    - :image1 (String.t): 
    - :image1_content_type (String.t): The content type of the image (like \\\"image/png\\\").
    - :image1_url (String.t): The url to the image.
    - :number_of_images (integer()): The number of images.
    - :image_last_modified (integer()): The last modification of the image.
    - :distribution_list ([OpenXchangeClient.Model.DistributionListMember.t]): If this contact is a distribution list, then this field is an array of objects. Each object describes a member of the list.
    - :number_of_distribution_list (integer()): The number of objects in the distribution list.
    - :mark_as_distributionlist (boolean()): 
    - :file_as (String.t): The file name.
    - :default_address (integer()): The default address.
    - :use_count (integer()): In case of sorting purposes the column 609 is also available, which places global address book contacts at the beginning of the result. If 609 is used, the order direction (ASC, DESC) is ignored.
    - :yomi_first_name (String.t): Kana based representation for the First Name. Commonly used in japanese environments for searchin/sorting issues.
    - :yomi_last_name (String.t): Kana based representation for the Last Name. Commonly used in japanese environments for searchin/sorting issues.
    - :yomi_company (String.t): Kana based representation for the Company. Commonly used in japanese environments for searchin/sorting issues.
    - :address_home (String.t): Support for Outlook 'home' address field.
    - :address_business (String.t): Support for Outlook 'business' address field.
    - :address_other (String.t): Support for Outlook 'other' address field.
    - :userfield01 (String.t): Dynamic Field 1.
    - :userfield02 (String.t): Dynamic Field 2.
    - :userfield03 (String.t): Dynamic Field 3.
    - :userfield04 (String.t): Dynamic Field 4.
    - :userfield05 (String.t): Dynamic Field 5.
    - :userfield06 (String.t): Dynamic Field 6.
    - :userfield07 (String.t): Dynamic Field 7.
    - :userfield08 (String.t): Dynamic Field 8.
    - :userfield09 (String.t): Dynamic Field 9.
    - :userfield10 (String.t): Dynamic Field 10.
    - :userfield11 (String.t): Dynamic Field 11.
    - :userfield12 (String.t): Dynamic Field 12.
    - :userfield13 (String.t): Dynamic Field 13.
    - :userfield14 (String.t): Dynamic Field 14.
    - :userfield15 (String.t): Dynamic Field 15.
    - :userfield16 (String.t): Dynamic Field 16.
    - :userfield17 (String.t): Dynamic Field 17.
    - :userfield18 (String.t): Dynamic Field 18.
    - :userfield19 (String.t): Dynamic Field 19.
    - :userfield20 (String.t): Dynamic Field 20.
    - :id (String.t): Object ID.
    - :created_by (String.t): User ID of the user who created this object.
    - :modified_by (String.t): User ID of the user who last modified this object.
    - :creation_date (integer()): Date and time of creation.
    - :last_modified (integer()): Date and time of the last modification.
    - :folder_id (String.t): Object ID of the parent folder.
    - :categories (String.t): String containing comma separated the categories. Order is preserved. Changing the order counts as modification of the object. Not present in folder objects.
    - :private_flag (boolean()): Overrides folder permissions in shared private folders: When `true`, this object is not visible to anyone except the owner. Not present in folder objects.
    - :color_label (integer()): Color number used by Outlook to label the object. The assignment of colors to numbers is arbitrary and specified by the client. The numbers are integer numbers between 0 and 10 (inclusive). Not present in folder objects.
    - :number_of_attachments (integer()): Number of attachments.
    - :last_modified_of_newest_attachment_utc (integer()): Timestamp of the newest attachment written with UTC time zone.
  ## Returns

  {:ok, OpenXchangeClient.Model.HaloInvestigationResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec investigate_contact_halo_with_body(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, OpenXchangeClient.Model.HaloInvestigationResponse.t()} | {:error, Tesla.Env.t()}
  def investigate_contact_halo_with_body(connection, session, provider, columns, opts \\ []) do
    optional_params = %{
      :timezone => :query,
      :start => :query,
      :end => :query,
      :sort => :query,
      :order => :query,
      :limit => :query,
      :contact_id => :form,
      :internal_userid => :form,
      :uid => :form,
      :display_name => :form,
      :first_name => :form,
      :last_name => :form,
      :second_name => :form,
      :suffix => :form,
      :title => :form,
      :street_home => :form,
      :postal_code_home => :form,
      :city_home => :form,
      :state_home => :form,
      :country_home => :form,
      :birthday => :form,
      :marital_status => :form,
      :number_of_children => :form,
      :profession => :form,
      :nickname => :form,
      :spouse_name => :form,
      :anniversary => :form,
      :note => :form,
      :department => :form,
      :position => :form,
      :employee_type => :form,
      :room_number => :form,
      :street_business => :form,
      :postal_code_business => :form,
      :city_business => :form,
      :state_business => :form,
      :country_business => :form,
      :user_id => :form,
      :number_of_employees => :form,
      :sales_volume => :form,
      :tax_id => :form,
      :commercial_register => :form,
      :branches => :form,
      :business_category => :form,
      :info => :form,
      :manager_name => :form,
      :assistant_name => :form,
      :street_other => :form,
      :postal_code_other => :form,
      :city_other => :form,
      :state_other => :form,
      :country_other => :form,
      :telephone_business1 => :form,
      :telephone_business2 => :form,
      :fax_business => :form,
      :telephone_callback => :form,
      :telephone_car => :form,
      :telephone_company => :form,
      :telephone_home1 => :form,
      :telephone_home2 => :form,
      :fax_home => :form,
      :cellular_telephone1 => :form,
      :cellular_telephone2 => :form,
      :telephone_other => :form,
      :fax_other => :form,
      :email1 => :form,
      :email2 => :form,
      :email3 => :form,
      :url => :form,
      :telephone_isdn => :form,
      :telephone_pager => :form,
      :telephone_primary => :form,
      :telephone_radio => :form,
      :telephone_telex => :form,
      :telephone_ttytdd => :form,
      :instant_messenger1 => :form,
      :instant_messenger2 => :form,
      :telephone_ip => :form,
      :telephone_assistant => :form,
      :company => :form,
      :image1 => :form,
      :image1_content_type => :form,
      :image1_url => :form,
      :number_of_images => :form,
      :image_last_modified => :form,
      :distribution_list => :form,
      :number_of_distribution_list => :form,
      :mark_as_distributionlist => :form,
      :file_as => :form,
      :default_address => :form,
      :useCount => :form,
      :yomiFirstName => :form,
      :yomiLastName => :form,
      :yomiCompany => :form,
      :addressHome => :form,
      :addressBusiness => :form,
      :addressOther => :form,
      :userfield01 => :form,
      :userfield02 => :form,
      :userfield03 => :form,
      :userfield04 => :form,
      :userfield05 => :form,
      :userfield06 => :form,
      :userfield07 => :form,
      :userfield08 => :form,
      :userfield09 => :form,
      :userfield10 => :form,
      :userfield11 => :form,
      :userfield12 => :form,
      :userfield13 => :form,
      :userfield14 => :form,
      :userfield15 => :form,
      :userfield16 => :form,
      :userfield17 => :form,
      :userfield18 => :form,
      :userfield19 => :form,
      :userfield20 => :form,
      :id => :form,
      :created_by => :form,
      :modified_by => :form,
      :creation_date => :form,
      :last_modified => :form,
      :folder_id => :form,
      :categories => :form,
      :private_flag => :form,
      :color_label => :form,
      :number_of_attachments => :form,
      :lastModifiedOfNewestAttachmentUTC => :form
    }

    %{}
    |> method(:put)
    |> url("/halo/contact?action&#x3D;investigate")
    |> add_param(:query, :session, session)
    |> add_param(:query, :provider, provider)
    |> add_param(:query, :columns, columns)
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      {200, %OpenXchangeClient.Model.HaloInvestigationResponse{}}
    ])
  end
end
