# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule OpenXchangeClient.Model.MailComposeMessageModel do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"id",
    :"from",
    :"to",
    :"cc",
    :"bcc",
    :"subject",
    :"content",
    :"contentType",
    :"attachments",
    :"meta",
    :"requestReadReceipt",
    :"priority",
    :"sharedAttachments",
    :"security"
  ]

  @type t :: %__MODULE__{
    :"id" => String.t | nil,
    :"from" => [String.t] | nil,
    :"to" => [[String.t]] | nil,
    :"cc" => [[String.t]] | nil,
    :"bcc" => [[String.t]] | nil,
    :"subject" => String.t | nil,
    :"content" => String.t | nil,
    :"contentType" => String.t | nil,
    :"attachments" => [OpenXchangeClient.Model.Attachment.t] | nil,
    :"meta" => OpenXchangeClient.Model.Meta.t | nil,
    :"requestReadReceipt" => boolean() | nil,
    :"priority" => String.t | nil,
    :"sharedAttachments" => OpenXchangeClient.Model.SharedAttachments.t | nil,
    :"security" => OpenXchangeClient.Model.Security.t | nil
  }
end

defimpl Poison.Decoder, for: OpenXchangeClient.Model.MailComposeMessageModel do
  import OpenXchangeClient.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"attachments", :list, OpenXchangeClient.Model.Attachment, options)
    |> deserialize(:"meta", :struct, OpenXchangeClient.Model.Meta, options)
    |> deserialize(:"sharedAttachments", :struct, OpenXchangeClient.Model.SharedAttachments, options)
    |> deserialize(:"security", :struct, OpenXchangeClient.Model.Security, options)
  end
end

