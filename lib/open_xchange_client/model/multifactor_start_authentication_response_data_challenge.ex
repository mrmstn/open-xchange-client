# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule OpenXchangeClient.Model.MultifactorStartAuthenticationResponseDataChallenge do
  @moduledoc """
  A challenge required to be solved for authentication
  """

  @derive [Poison.Encoder]
  defstruct [
    :phoneNumberTail,
    :backupStringLength,
    :requestId,
    :signRequests
  ]

  @type t :: %__MODULE__{
          :phoneNumberTail => String.t() | nil,
          :backupStringLength => integer() | nil,
          :requestId => String.t() | nil,
          :signRequests =>
            [
              OpenXchangeClient.Model.MultifactorStartAuthenticationResponseDataChallengeSignRequests.t()
            ]
            | nil
        }
end

defimpl Poison.Decoder,
  for: OpenXchangeClient.Model.MultifactorStartAuthenticationResponseDataChallenge do
  import OpenXchangeClient.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :signRequests,
      :list,
      OpenXchangeClient.Model.MultifactorStartAuthenticationResponseDataChallengeSignRequests,
      options
    )
  end
end
